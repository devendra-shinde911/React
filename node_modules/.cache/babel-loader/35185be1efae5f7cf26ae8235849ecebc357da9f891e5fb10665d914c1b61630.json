{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Electronics() {\n  _s();\n  const [electronic, setElectronic] = useState([]);\n  useEffect(() => {\n    then(response => response.json()).then(val => {});\n    fetch('https://fakestoreapi.com/products/categories').then(response => response.json()).then(data => {\n      setCategory(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Electronics, \"e3NH4/cRCPR9HSwFGijz+vobxJk=\");\n_c = Electronics;\nvar _c;\n$RefreshReg$(_c, \"Electronics\");","map":{"version":3,"names":["React","Fragment","_Fragment","jsxDEV","_jsxDEV","Electronics","_s","electronic","setElectronic","useState","useEffect","then","response","json","val","fetch","data","setCategory","_c","$RefreshReg$"],"sources":["E:/Devendra/React/Projects/project1/src/component/Electronics.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function Electronics() {\r\n\r\nconst [electronic, setElectronic] = useState([])\r\n\r\nuseEffect(() => {\r\n\r\n  then(response => response.json())\r\n  .then(val =>{\r\n     \r\n  })\r\n\r\n  fetch('https://fakestoreapi.com/products/categories')\r\n  .then(response => response.json())\r\n  .then(data => {\r\n      setCategory(data)\r\n  })\r\n\r\n\r\n\r\n}, [])\r\n\r\n  return (\r\n   \r\n    <>\r\n    </>\r\n\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IAEdC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAChCF,IAAI,CAACG,GAAG,IAAG,CAEZ,CAAC,CAAC;IAEFC,KAAK,CAAC,8CAA8C,CAAC,CACpDJ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACK,IAAI,IAAI;MACVC,WAAW,CAACD,IAAI,CAAC;IACrB,CAAC,CAAC;EAIJ,CAAC,EAAE,EAAE,CAAC;EAEJ,oBAEEZ,OAAA,CAAAF,SAAA,mBACE,CAAC;AAGP;AAACI,EAAA,CA3BuBD,WAAW;AAAAa,EAAA,GAAXb,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}